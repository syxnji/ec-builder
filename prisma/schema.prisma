generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  product   product[]
}

model order {
  id          Int         @id @default(autoincrement())
  userId      Int
  totalAmount Float
  status      String      @default("pending")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        user        @relation(fields: [userId], references: [id], map: "Order_userId_fkey")
  orderitem   orderitem[]

  @@index([userId], map: "Order_userId_fkey")
}

model orderitem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     order    @relation(fields: [orderId], references: [id], map: "OrderItem_orderId_fkey")
  product   product  @relation(fields: [productId], references: [id], map: "OrderItem_productId_fkey")

  @@index([orderId], map: "OrderItem_orderId_idx")
  @@index([productId], map: "OrderItem_productId_idx")
}

model product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int         @default(0)
  imageUrl    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  categoryId  Int?
  category    category?   @relation(fields: [categoryId], references: [id])
  orderitem   orderitem[]
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique(map: "User_email_key")
  password  String
  name      String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     order[]
}
